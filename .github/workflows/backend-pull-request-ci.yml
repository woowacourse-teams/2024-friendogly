name: backend-ci

on:
  push:
    branches: [ "develop" ]
    paths:
     - 'backend/**'
  pull_request:
    branches: [ "develop" ]
    paths:
     - 'backend/**'

defaults:
  run:
   working-directory: ./backend

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      checks: write

      # needed unless run with comment_mode: off
      pull-requests: write

      # only needed for private repository
      contents: read

      # only needed for private repository
      issues: read

      # required by download step to access artifacts API
      actions: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.1.1

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: friendogly-be-develop-jar
          path: ./backend/build/libs/friendogly-0.0.1-SNAPSHOT.jar

      - name: 테스트 결과를 PR에 코멘트로 등록합니다
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: './backend/build/test-results/test/TEST-*.xml'


      - name: 실패 테스트결과의 원인을 Report 합니다
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: './backend/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}

  deploy:
    runs-on: self-hosted
    steps:
      # # 처음 _work 폴더에 github actions 프로그램이 파일을 수정할 권한이 없어서, 권한을 부여해 주기 위한 작업입니다
      # # 이 명령을 통해서 이미 있는 폴더에 git pull 을 사용할 수 있습니다
      # - name: change permission
      #   # 마지막 jwp-shopping-order 는 repository 이름입니다.
      #   run: |
      #     sudo chown -R ubuntu:ubuntu /home/ubuntu/actions-runner/_work/jwp-shopping-order 

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: friendogly-be-develop-jar
          path: ./build/libs

      - name: Check if room-esc server is running on port 8080
        id: check-server-on-port
        run: |
          echo "Checking if port 8080 is in use..."
          PID=$(lsof -t -i:8080 || true)
          if [ -n "$PID" ]; then
            echo "server_running=true" >> $GITHUB_ENV
            echo "PID=$PID" >> $GITHUB_ENV
          else
            echo "server_running=false" >> $GITHUB_ENV
          fi

      - name: Stop server if running
        if: env.server_running == 'true'
        run: |
          echo "Stopping server running on port 8080..."
          kill -9 $PID
          echo "Preivous running Server stopped."

      - name: Start server
        run: |
          sudo nohup java -jar build/libs/friendogly-0.0.1-SNAPSHOT.jar &
          echo "Lastest Backend API Server started."
